image: golang:latest

variables:
  REPO_NAME: gitlab.com/gomidi/midi/v2

before_script:
  - go version
  - echo $CI_BUILD_REF
  - echo $CI_PROJECT_DIR
  - echo $GOPATH

mingo:
  image: golang:1.24.2
  stage: test
#  when: manual
  script:
    - cd v2
    - apt-get update
    - apt-get install -y libasound2-dev
#    - apt-get install -y libportmidi-dev
    - go install gitlab.com/gomidi/tools/midicat@v1.0.4
    - go env
    - go fmt $(go list ./... | grep -v /vendor|imported/)
    - go vet $(go list ./... | grep -v /vendor|imported/)
    - go test $(go list ./... | grep -v /vendor/)

format:
  stage: test
#  when: manual
  script:
    - cd v2
    - apt-get update
    - apt-get install -y libasound2-dev
#    - apt-get install -y libportmidi-dev
    - go install gitlab.com/gomidi/tools/midicat@v1.0.4
    - go env
    - go fmt $(go list ./... | grep -v /vendor|imported/)
    - go vet $(go list ./... | grep -v /vendor|imported/)
    - go test -race $(go list ./... | grep -v /vendor/)
#    - apt-cache search 'asound'
#    - apt-cache search 'portmidi'
#    - go fmt $(go list ./... | grep -v /drivers/)
#    - go vet $(go list ./... | grep -v /drivers/)
#    - go test -race $(go list ./... | grep -v /drivers/)

stages:
  - test

  
test-project:
  stage: test
#  when: manual
  script:
    - cd v2
    - apt-get update
    - apt-get install -y libasound2-dev
#    - apt-get install -y libportmidi-dev
    - go install gitlab.com/gomidi/tools/midicat@v1.0.4
    - go env
    - midicat ins
    - midicat outs
    - go test $(go list ./... | grep -v /vendor/)

WindowsJob:
  stage: test
#  when: manual
  tags:
#    - windows
    - saas-windows-medium-amd64
  script:
    - echo %PATH%
#    - go.exe test ./...
    - nuget install WGETWindows
    - nuget install 7-Zip.CommandLine
    - dir 7-Zip.CommandLine.18.1.0
    - dir WGETWindows.1.11.4
    - wget.exe --no-check-certificate https://gitlab.com/gomidi/tools/-/jobs/9861847349/artifacts/download?file_type=archive
    - 7z.exe e artifacts.zip
#    - mkdir 
    - set PATH=%PATH%;%cd%
    - move build-midicat/win-amd64/midicat.exe %cd%
#SET var=%cd%
#ECHO %var%
#    - go install gitlab.com/gomidi/tools/midicat@v1.0.4
    - cd v2
    - go.exe test $(go list ./... | findstr /v "drivers")

# no free runners
#OSXJob:
#  stage: test
#  tags:
#    - osx
#  script:
#    - cd v2
#    - uname -a
#    - go test $(go list ./... | grep -v /drivers/)

    
#OSXJob:
#  stage: test
#  tags:
#    - osx
#  script:
#    - uname -a
#    - go test ./...


#build-project:
#  stage: build
#  script:
#    - OUTPUT="output"
#    - bash build-all.sh $OUTPUT $CI_PROJECT_DIR
#    
#  artifacts:
#    paths:
#      - artifacts/

#WindowsJob:
#  stage: test
#  tags:
#    - windows
#  script:
#    - go.exe test ./...

#OSXJob:
#  stage: test
#  tags:
#    - osx
#  script:
#    - uname -a
#    - go test ./...
