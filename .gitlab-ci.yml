image: golang:latest

variables:
  REPO_NAME: gitlab.com/gomidi/midi/v2

before_script:
  - go version
  - echo $CI_BUILD_REF
  - echo $CI_PROJECT_DIR
  - echo $GOPATH

mingo:
  image: golang:1.22.1
  stage: test
#  when: manual
  script:
    - cd v2
    - apt-get update
    - apt-get install -y libasound2-dev
    - apt-get install -y libportmidi-dev
    - go install gitlab.com/gomidi/midi/tools/midicat@latest
    - go env
    - go fmt $(go list ./... | grep -v /vendor|imported/)
    - go vet $(go list ./... | grep -v /vendor|imported/)
    - go test $(go list ./... | grep -v /vendor/)

format:
  stage: test
#  when: manual
  script:
    - cd v2
    - apt-get update
    - apt-get install -y libasound2-dev
    - apt-get install -y libportmidi-dev
    - go install gitlab.com/gomidi/midi/tools/midicat@latest
    - go env
    - go fmt $(go list ./... | grep -v /vendor|imported/)
    - go vet $(go list ./... | grep -v /vendor|imported/)
    - go test -race $(go list ./... | grep -v /vendor/)
#    - apt-cache search 'asound'
#    - apt-cache search 'portmidi'
#    - go fmt $(go list ./... | grep -v /drivers/)
#    - go vet $(go list ./... | grep -v /drivers/)
#    - go test -race $(go list ./... | grep -v /drivers/)

stages:
  - build
  - test

  
test-project:
  stage: test
#  when: manual
  script:
    - cd v2
    - apt-get update
    - apt-get install -y libasound2-dev
    - apt-get install -y libportmidi-dev
    - go install gitlab.com/gomidi/midi/tools/midicat@latest
    - go env
    - midicat ins
    - midicat outs
    - go test $(go list ./... | grep -v /vendor/)

test-examples:
  stage: test
#  when: manual
  script:
    - cd examples
    - apt-get update
    - apt-get install -y libasound2-dev
    - apt-get install -y libportmidi-dev
    - go test $(go list ./... | grep -v /vendor/)
    - cd logger
    - go test $(go list ./... | grep -v /vendor/)
    - cd ../looper
    - go test $(go list ./... | grep -v /vendor/)
    - cd ../simple
    - go test $(go list ./... | grep -v /vendor/)
    - cd ../smfplayer
    - go test $(go list ./... | grep -v /vendor/)
    - cd ../smfrecorder
    - go test $(go list ./... | grep -v /vendor/)
    - cd ../sysex
    - go test $(go list ./... | grep -v /vendor/)


test-tools:
  stage: test
#  when: manual
  script:
    - cd tools
    - apt-get update
    - apt-get install -y libasound2-dev
    - apt-get install -y libportmidi-dev
#    - cd hyperarp
#    - go test $(go list ./... | grep -v /vendor/)
    - cd midicat
    - go test $(go list ./... | grep -v /vendor/)
    - cd ../midispy
    - go test $(go list ./... | grep -v /vendor/)
    - cd ../smflyrics
    - go test $(go list ./... | grep -v /vendor/)

WindowsJob:
  stage: test
#  when: manual
  tags:
    - windows
  script:
#    - go.exe test ./...
    - cd v2
    - go.exe test $(go list ./... | findstr /v "drivers")

build-midicat:
  stage: build
  script:
    - go env
    - apt-get update
    - apt-get install -y libasound2-dev
    - apt-get install -y libportmidi-dev
    - apt-get install -y gcc
    - apt-get install -y gcc-mingw-w64
    - apt-get install -y g++-mingw-w64-x86-64
    - ls /usr/bin/x86_64-*
    - mkdir midicat
    - mkdir midicat/linux-amd64
    - mkdir midicat/win-amd64
#    - mkdir midicat/mac-amd64
    - cd tools/midicat
    - GOOS=linux GOARCH=amd64 CC='gcc' CXX='g++' CGO_ENABLED='1' go build -o ../../midicat/linux-amd64/midicat .
    - GOOS=windows GOARCH=amd64 CC='x86_64-w64-mingw32-gcc' CXX='x86_64-w64-mingw32-g++' CGO_ENABLED='1' go build -o ../../midicat/win-amd64/midicat.exe .
#    - GOOS=darwin GOARCH=amd64 CC='gcc' CXX='g++' CGO_ENABLED='1' go build -o ../../midicat/mac-amd64/midicat .    

  artifacts:
    paths:
      - midicat/

# no free runners
#OSXJob:
#  stage: test
#  tags:
#    - osx
#  script:
#    - cd v2
#    - uname -a
#    - go test $(go list ./... | grep -v /drivers/)

    
#OSXJob:
#  stage: test
#  tags:
#    - osx
#  script:
#    - uname -a
#    - go test ./...


#build-project:
#  stage: build
#  script:
#    - OUTPUT="output"
#    - bash build-all.sh $OUTPUT $CI_PROJECT_DIR
#    
#  artifacts:
#    paths:
#      - artifacts/

#WindowsJob:
#  stage: test
#  tags:
#    - windows
#  script:
#    - go.exe test ./...

#OSXJob:
#  stage: test
#  tags:
#    - osx
#  script:
#    - uname -a
#    - go test ./...
